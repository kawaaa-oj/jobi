//=============================================================================
//
// 背景の処理 [bg.cpp]
// Author : 川村優斗
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "bg.h"
#include"keyboard.h"
#include"texture.h"
#include"padx.h"

//*****************************************************************************
// 静的メンバ変数
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CBg::CBg(int nPriority) : CScene2D(nPriority)
{
	m_time = 10;
	m_nHelpNum = 0;
	m_col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	m_nPriority = nPriority;
	m_bTextureFlag = true;
}

//=============================================================================
// デストラクタ
//=============================================================================
CBg::~CBg()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CBg::Init(void)
{
	CScene2D::Init();
	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CBg::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CBg::Update(void)
{
	// キーボード取得
	CKeyboard *pKeyboard = CManager::GetKeyboard();

	// ゲームパッド取得
	CPadX *pPadX = CManager::GetPadX();

	// テクスチャ反映/解除
	if (pKeyboard->GetTrigger(DIK_SPACE) == true || pPadX->GetButtonTrigger(XINPUT_GAMEPAD_X) == true)
	{
		if (m_bTextureFlag == true)
		{
			// テクスチャを消す
			m_col.a = 0.0f;
			SetColor(m_col);
			m_bTextureFlag = false;
		}
		else if (m_bTextureFlag == false)
		{
			// テクスチャを出す
			m_col.a = 1.0f;
			SetColor(m_col);
			m_bTextureFlag = true;
		}
	}

	CScene2D::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CBg::Draw(void)
{
	CScene2D::Draw();
}


//=============================================================================
// 生成処理
//=============================================================================
CBg * CBg::Create(D3DXVECTOR3 pos, D3DXVECTOR2 size, CTexture::TEXTURE_TYPE type)
{
	// 背景のインスタンス生成
	CBg *pBg = new CBg;

	// 背景の準備
	if (pBg != NULL)
	{
		pBg->m_type = type;
		pBg->m_pos = pos;
		pBg->SetPosition(pos);
		pBg->SetSize(size);
		pBg->Init();
		pBg->BindTexture(CManager::GetTexture()->SetTextureType(type));
	}
	return pBg;
}