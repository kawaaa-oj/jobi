//=============================================================================
//
// フェードの処理 [fade.cpp]
// Author : 川村優斗
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "fade.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CFade::CFade(int nPriority) : CScene2D(nPriority)
{
	m_col = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
	m_fade = FADE_NONE;
}

//=============================================================================
// デストラクタ
//=============================================================================
CFade::~CFade()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CFade::Init(void)
{
	CScene2D::Init();

	// メンバ変数の初期化
	m_fade = FADE_IN;
	m_col = D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CFade::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CFade::Update(void)
{
	if (m_fade != FADE_NONE)
	{
		if (m_fade == FADE_IN)
		{
			m_col.a -= FADE_SPEED;
			if (m_col.a <= 0.0f)
			{
				m_col.a = 0.0f;
				m_fade = FADE_NONE;
			}
		}
		else if (m_fade == FADE_OUT)
		{
			m_col.a += FADE_SPEED;
			if (m_col.a >= 1.0f)
			{
				m_col.a = 1.0f;
				m_fade = FADE_IN;
				CManager::SetMode(m_mode);
			}
		}
		SetColor(m_col);
	}
	CScene2D::Update();
}

//=============================================================================
// 描画処理
//=============================================================================
void CFade::Draw(void)
{
	CScene2D::Draw();
}

//=============================================================================
// 生成処理
//=============================================================================
CFade * CFade::Create(D3DXVECTOR3 pos, D3DXVECTOR2 size, CManager::MODE mode)
{
	// フェードのインスタンス生成
	CFade *pFade = new CFade;

	if (pFade != NULL)
	{
		pFade->Init();
		pFade->SetPosition(pos);
		pFade->SetSize(size);
		pFade->m_mode = mode;
		pFade->m_fade = FADE_OUT;
	}
	return pFade;
}

//=============================================================================
// フェードの取得
//=============================================================================
CFade::FADE CFade::GetFade(void)
{
	return m_fade;
}

//=============================================================================
// フェードの設定
//=============================================================================
void CFade::SetFade(CManager::MODE mode)
{
	m_fade = FADE_OUT;
	m_mode = mode;
	m_col = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
}